/**
 *
 * $Id$
 */
package sensingflow.model.validation;

import org.eclipse.draw2d.geometry.Point;

import org.eclipse.emf.common.util.EList;

import sensingflow.model.SensingflowLinkRouterKind;
import sensingflow.model.SensingflowNode;
import sensingflow.model.SensingflowProcessor;

/**
 * A sample validator interface for {@link sensingflow.model.SensingflowLink}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SensingflowLinkValidator {
	boolean validate();

	boolean validateProc(SensingflowProcessor value);

	boolean validateOpd(SensingflowProcessor value);
	boolean validateSource(SensingflowNode value);
	boolean validateTarget(SensingflowNode value);
	boolean validateBendpoints(EList<Point> value);
	boolean validateRouterKind(SensingflowLinkRouterKind value);

	boolean validateWindowSize(int value);

	boolean validateSlidingWindowSize(int value);
}
